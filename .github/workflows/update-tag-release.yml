# Workflow to update all Dockerfiles when a new version of Caddy is available and create a new release and tag
name: Update Dockerfiles, tag and release

# Controls when the action will run
on:
  workflow_dispatch:  # allows to run the workflow manually from the Actions tab
  push:
    branches: main
    paths:
      - caddy-cloudflare-ddns-crowdsec/Dockerfile  # file updated by Dependabot used as reference

# Environment variables available to all jobs and steps in this workflow
env:
  CADDY_BUILDS: |  # list of all Caddy Docker custom builds
    caddy-cloudflare-ddns-crowdsec

# Jobs to run once the workflow is triggered
jobs:
  # Job to parse the Caddy version from the reference Dockerfile
  metadata:
    name: Get updated Caddy version
    runs-on: ubuntu-latest

    outputs:
      version_short: ${{ steps.version.outputs.version_short }} # i.e. 2.9
      version_long: ${{ steps.version.outputs.version_long }} # i.e. 2.9.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Parse Caddy version
        id: version
        run: |
          version=$(grep -Eo 'caddy:[0-9]+\.[0-9]+(\.[0-9]+)?$' caddy-cloudflare-ddns-crowdsec/Dockerfile | cut -d ':' -f2)
          echo "version_short=$version" | tee -a $GITHUB_OUTPUT
          if [[ "$version" =~ ^[0-9]+\.[0-9]+$ ]]; then
            version="${version}.0"  # Add .0 if the patch number is missing
          fi
          echo "version_long=$version" | tee -a $GITHUB_OUTPUT
  
  # Job to update the Caddy version in all Dockerfiles and create a tag
  update:
      name: Update Caddy and create tag
      runs-on: ubuntu-latest
      needs: metadata

      steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: main

      - name: Replace Caddy version in all Dockerfiles
        run: |
          for caddy_build in $CADDY_BUILDS; do
            sed -i "s/caddy:[0-9]\+\.[0-9]\+\(\.[0-9]\+\)\?/caddy:${{ needs.metadata.outputs.version_short }}/g" ./$caddy_build/Dockerfile
          done

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Commit and push changes
        run: |
          git add ./*/Dockerfile
          if [ "$(git diff HEAD)" ]
          then
            git commit -S -m "Bump Caddy version to v${{ needs.metadata.outputs.version_long }} in all Dockerfiles"
            git push
          else
            echo "No changes detected"
          fi
        
      - name: Create and push tag
        run: |
          git tag -fs v${{ needs.metadata.outputs.version_long }} -m "Docker images built with Caddy v${{ needs.metadata.outputs.version_long }}"
          git push --tags -f

  # Job to create a release
  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [metadata, update]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: main

      - name: Push release to github repository
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.metadata.outputs.version_long }}
          body: |
            Caddy release notes: https://github.com/caddyserver/caddy/releases/tag/v${{ needs.metadata.outputs.version_long }}